# {{ ansible_managed }}
# ansibleguy.infra_nginx

{% if site.proxy.cache.enable %}
proxy_cache_path {{ site.proxy.cache.path }}/site_{{ name }} levels={{ site.proxy.cache.levels }} keys_zone={{ name }}_cache:{{ site.proxy.cache.memory }} max_size={{ site.proxy.cache.max_size }} inactive={{ site.proxy.cache.inactive }} use_temp_path={{ site.proxy.cache.use_temp_path }};
{% endif %}

{% if site.plain_site %}
# http listener
server {
  listen {% if site.listen != '' %}{{ site.listen }}:{% endif %}{{ site.port_plain }};
{% if NGINX_CONFIG.ipv6 and site.listen_ipv6 != '' %}
  listen {{ site.listen_ipv6 }}:{{ site.port_plain }};
{% endif %}
  server_name {{ site.domain }}{% for alias in site.aliases %} {{ alias }}{% endfor %}{% if site.ip is not none %} {{ site.ip }}{% endif %};

  # log config
{%   if NGINX_CONFIG.log.syslog and NGINX_CONFIG.log.syslog_host is not none %}
  access_log syslog:server={{ NGINX_CONFIG.log.syslog_host }},tag={{ NGINX_CONFIG.log.prefix_ue }}{{ name }},nohostname,severity=info combined;
  error_log  syslog:server={{ NGINX_CONFIG.log.syslog_host }},tag={{ NGINX_CONFIG.log.prefix_ue }}{{ name }},nohostname,severity=error;
{%   elif NGINX_CONFIG.log.syslog %}
  access_log syslog:server=unix:/dev/log,tag={{ NGINX_CONFIG.log.prefix_ue }}{{ name }},nohostname,severity=info combined;
  error_log  syslog:server=unix:/dev/log,tag={{ NGINX_CONFIG.log.prefix_ue }}{{ name }},nohostname,severity=error;
{%   elif NGINX_CONFIG.log.per_site %}
  error_log {{ NGINX_CONFIG.log.path }}/{{ name }}_error.log;
  access_log {{ NGINX_CONFIG.log.path }}/{{ name }}_access.log;
{%   else %}
  error_log {{ NGINX_CONFIG.log.path }}/error.log;
  access_log {{ NGINX_CONFIG.log.path }}/access.log;
{%   endif %}

{%   if site.headers | length > 0 %}
  # site-specific headers
{%     for header, value in site.headers.items() %}
{%       if value not in NONE_VALUES %}
{%         if 'header' in header %}
  {{ header }} {{ value }};
{%         else %}
  add_header {{ header }} {{ value }};
{%         endif %}
{%       endif %}
{%     endfor %}
{%   endif %}

{%   if site.security.restrict_methods %}
  # security config
  if ($request_method !~ ^({{ nginx_restricted_methods | join('|') }})$ ) {
    return 405;
  }
{%   endif %}

  # redirect all to secure connection
{% if site.plain_redirect == 'preserve_domain' %}
  return 301 https://$host$request_uri;
{% else %}
  return 301 https://$server_name$request_uri;
{% endif %}


}
{% endif %}

# https listener
server {
  listen {% if site.listen != '' %}{{ site.listen }}:{% endif %}{{ site.port_ssl }} ssl {% if site.http_version | int == 2 %}http2{% elif site.http_version | int == 3 %}http3{% endif %};
{% if NGINX_CONFIG.ipv6 and site.listen_ipv6 != '' %}
  listen {{ site.listen_ipv6 }}:{{ site.port_ssl }} ssl {% if site.http_version | int == 2 %}http2{% elif site.http_version | int == 3 %}http3{% endif %};
{% endif %}
  server_name {{ site.domain }}{% for alias in site.aliases %} {{ alias }}{% endfor %}{% if site.ip is not none %} {{ site.ip }}{% endif %};

{% if site.main_redirect %}
  if ($host != $server_name) {
    rewrite ^/(.*) $scheme://$server_name/$1 permanent;
  }
{% endif %}

  # log config
{% if NGINX_CONFIG.log.syslog and NGINX_CONFIG.log.syslog_host is not none %}
  access_log syslog:server={{ NGINX_CONFIG.log.syslog_host }}:{{ NGINX_CONFIG.log.syslog_port }},tag={{ NGINX_CONFIG.log.prefix_ssl }}{{ name }},nohostname,severity=info combined;
  error_log  syslog:server={{ NGINX_CONFIG.log.syslog_host }}:{{ NGINX_CONFIG.log.syslog_port }},tag={{ NGINX_CONFIG.log.prefix_ssl }}{{ name }},nohostname,severity=error;
{% elif NGINX_CONFIG.log.syslog %}
  access_log syslog:server=unix:/dev/log,tag={{ NGINX_CONFIG.log.prefix_ssl }}{{ name }},nohostname,severity=info combined;
  error_log  syslog:server=unix:/dev/log,tag={{ NGINX_CONFIG.log.prefix_ssl }}{{ name }},nohostname,severity=error;
{% elif NGINX_CONFIG.log.per_site %}
  error_log {{ NGINX_CONFIG.log.path }}/{{ name }}_error.log;
  access_log {{ NGINX_CONFIG.log.path }}/{{ name }}_access.log;
{% else %}
  error_log {{ NGINX_CONFIG.log.path }}/error.log;
  access_log {{ NGINX_CONFIG.log.path }}/access.log;
{% endif %}

  # ssl config
  ssl_certificate_key '{{ NGINX_CONFIG.ssl.path }}/{{ name }}.key';
  ssl_certificate     '{{ NGINX_CONFIG.ssl.path }}/{{ name }}{% if site.ssl.mode == 'letsencrypt' %}.fullchain{% elif site.ssl.mode == 'ca' %}.chain{% endif %}.crt';  # should use the certificate chain => top is server cert; bottom root cert
{% if site.ssl.ca.file is not none %}
  ssl_trusted_certificate {{ site.ssl.file_ca }};
  ssl_stapling off;
  ssl_stapling_verify off;
{% elif site.ssl.mode == 'ca' %}
  ssl_trusted_certificate '{{ NGINX_CONFIG.ssl.path }}/ca.crt';
  ssl_stapling off;
  ssl_stapling_verify off;
{% else %}
  ssl_stapling on;
  ssl_stapling_verify on;
{% endif %}

{% if site.security.restrict_methods %}
  # security config
  if ($request_method !~ ^({{ nginx_restricted_methods | join('|') }})$ ) {
    return 405;
  }
{% endif %}

{% if NGINX_CONFIG.config | length > 0 %}
  # global config
{% for setting, value in NGINX_CONFIG.config.items() %}
{%   if setting not in nginx_config_graylist and setting not in site.config and value not in NONE_VALUES %}
  {{ setting }} {{ value }};
{%   endif %}
{% endfor %}
{% endif %}

{% if site.config | length > 0 %}
  # site-specific config
{% for setting, value in site.config.items() %}
{%   if setting not in nginx_config_graylist and value not in NONE_VALUES %}
  {{ setting }} {{ value }};
{%   endif %}
{% endfor %}
{% endif %}

{% if NGINX_CONFIG.headers | length > 0 %}
  # global headers
{%   for header, value in NGINX_CONFIG.headers.items() %}
{%     if header not in site.headers and value not in NONE_VALUES %}
{%       if 'header' in header %}
  {{ header }} {{ value }};
{%       else %}
  add_header {{ header }} {{ value }};
{%       endif %}
{%     endif %}
{%   endfor %}
{% endif %}

{% if site.headers | length > 0 %}
  # site-specific headers
{%   for header, value in site.headers.items() %}
{%     if value not in NONE_VALUES %}
{%       if 'header' in header %}
  {{ header }} {{ value }};
{%       else %}
  add_header {{ header }} {{ value }};
{%       endif %}
{%     endif %}
{%   endfor %}
{% endif %}

  location / {
{% if site.mode == 'proxy' %}
    # proxy-mode config
    proxy_pass {{ site.proxy.proto }}://{{ site.proxy.dns | default(site.proxy.ip, true) }}:{{ site.proxy.port }};

{%   for option, value in site.proxy.headers.items() %}
{%     if value not in NONE_VALUES %}
    proxy_set_header {{ option }} {{ value }};
{%     endif %}
{%   endfor %}

{%   if site.proxy.cache.enable %}
    proxy_cache {{ name }}_cache;
{%     for setting, value in site.proxy.cache.settings.items() %}
    proxy_cache_{{ setting }} {{ value }};
{%     endfor %}
{%   endif %}

{% elif site.mode == 'redirect' %}
    # redirect-mode config
{%   if site.redirect.request_uri %}
    return 302 {{ site.redirect.target }}$request_uri;
{%   else %}
    return 302 {{ site.redirect.target }};
{%   endif %}

{% elif site.mode == 'serve' %}
    # serve-mode config
    root {{ site.serve.path }};
    index {% for ind in site.serve.index %}{{ ind }} {% endfor %};

    location / {
        try_files $uri $uri/ /{{ site.serve.index[0] }};
    }

{% endif %}

  }

{% if site.config_additions | length > 0 %}
  # additional lines
{% endif %}
{% for line in site.config_additions %}
  {{ line }}
{% endfor %}

}
