---

- name: Nginx | Showing debug info - user provided config
  ansible.builtin.debug:
    var: nginx
  when: debug | bool

- name: Nginx | Showing debug info - running config
  ansible.builtin.debug:
    var: NGINX_CONFIG
  when: debug | bool

- name: Nginx | Installing nginx
  ansible.builtin.apt:
    pkg: "{{ NGINX_HC.packages }}"
    state: present
    update_cache: true
  tags: [base]

- name: Nginx | Creating service user
  ansible.builtin.user:
    name: "{{ NGINX_CONFIG.user }}"
    shell: '/usr/sbin/nologin'
    comment: 'Nginx Service User'
  when: NGINX_CONFIG.user != 'www-data'

- name: Nginx | Setting base config
  ansible.builtin.lineinfile:
    path: '/etc/nginx/nginx.conf'
    regexp: "{{ item.search }}"
    line: "{{ item.replace }}"
    validate: "nginx -t -c %s"
    insertafter: "{{ item.after | default(omit) }}"
    backrefs: true
  notify: restart-nginx
  loop: "{{ NGINX_HC.main_config }}"

# todo: implement GeoIP
#   https://fedingo.com/how-to-block-ip-by-country-in-nginx/

- name: Nginx | Removing default site
  ansible.builtin.file:
    path: '/etc/nginx/sites-enabled/default'
    state: absent

- name: Nginx | Removing status page
  ansible.builtin.include_tasks: rm_status.yml
  when: NGINX_CONFIG.status_page.state != 'present'
  tags: [base, config, sites]
  args:
    apply:
      tags: [base, config, sites]

- name: Nginx | Adding auth directory
  ansible.builtin.file:
    path: '/etc/nginx/auth'
    owner: 'root'
    group: "{{ NGINX_CONFIG.group }}"
    mode: 0750
    state: directory

- name: Nginx | Processing sites
  ansible.builtin.import_tasks: sites.yml

- name: Nginx | Starting/Enabling nginx
  ansible.builtin.systemd:
    name: 'nginx.service'
    enabled: yes
    state: started
  tags: [base]
