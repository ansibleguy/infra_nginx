---

NGINX_HC:
  packages: ['systemd', 'nginx']
  main_config:  # /etc/nginx/nginx.conf
    - search: "^user "
      replace: "user {{ NGINX_CONFIG.user }};"
    - search: "(\\s*)include \/etc\/nginx\/sites-enabled"
      replace: "\\1include /etc/nginx/sites-enabled/*;"
      after: 'http {'
  config_graylist: ['ssl_stapling', 'ssl_stapling_verify']
  restricted_methods: ['GET', 'POST', 'HEAD']
  dangerous_methods: ['CONNECT', 'TRACE']
  options:
    basic_auth: ['file', 'pam']
    basic_auth_pam: ['system', 'custom']

  # see also: https://github.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/blob/master/_generator_lists/bad-user-agents.list
  user_agents:
    # Well-known user-agents used by scripting languages for very basic security-filtering
    # matching is done case-insensitive
    script:
      # NOTE: empty user-agent is also matched
      full: []

      # NOTE: these are sub-strings inside the user-agent header
      sub:
        # cli tools
        - 'curl'
        - 'wget'
        - 'Apache-HttpClient'
        - 'nmap'
        - 'Metasploit'
        # automation tools
        - 'headless'
        - 'cypress'
        # golang
        - 'go-http-client'
        - 'zgrab'
        # python
        - 'python'
        - 'httpx'
        - 'httpcore'
        - 'aiohttp'
        - 'httputil'
        - 'urllib'
        # php
        - 'GuzzleHttp'
        - 'phpcrawl'
        - 'Zend_Http_Client'
        - 'Wordpress'
        - 'Symfony-HttpClient'
        # others
        - 'cpp-httplib'  # c++
        - 'java'
        - 'perl'
        - 'axios'  # JS
        - 'perl'
        - 'ruby'

    bad_crawlers:
      full: []
      sub:
        - 'spider'
        - 'test-bot'
        - 'tiny-bot'
        - 'fidget-spinner-bot'
        - 'download'
        # python
        - 'scrapy'

NONE_VALUES: [none, '', ' ']
