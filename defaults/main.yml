---

# see for valid units: https://nginx.org/en/docs/syntax.html

# default config => is overwritten by provided config
default_nginx:
  user: 'www-data'
  group: 'www-data'
  sites: {}

  status_page:
    state: 'present'
    bind: '127.0.0.1'
    port: 80
    path: 'basic_status'
    allow: []

  log:
    path: '/var/log/nginx'
    per_site: true
    syslog: true
    syslog_host:
    syslog_port: 514
    prefix_ue: 'nginx_'  # log prefix for http site
    prefix_ssl: 'nginx_'  # log prefix for ssl site

  config:
    autoindex: 'off'
    server_tokens: 'off'
    proxy_pass_request_headers: 'on'
    proxy_connect_timeout: 150
    proxy_send_timeout: 100
    proxy_read_timeout: 100
    proxy_buffers: '4 32k'
    client_max_body_size: '50m'
    client_body_buffer_size: '128k'
    client_header_buffer_size: '2k'
    client_header_timeout: '5s'
    large_client_header_buffers: '3 1k'
    ssl_session_cache: 'shared:SSL:10m'
    ssl_session_timeout: '10m'
    client_body_timeout: '5s'
    ssl_protocols: 'TLSv1.2 TLSv1.3'
    ssl_prefer_server_ciphers: 'off'
    ssl_ciphers: 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4'
    # limit_conn: 'conns 100'  # zero size shared memory zone

  letsencrypt:
    key_size: 4096
    path: '/etc/letsencrypt'
    renew_timer: 'Mon *-*-* 01:00:00'
    verbosity: 'v'
    email:
    renew: false  # if a renewal should be started by the role; the renewal service will auto-renew the certificates otherwise

  ssl:
    path: '/etc/nginx/ssl'
    ca:
      file:  # can be used if you want to use an existing ca
      cn: 'Nginx CA Certificate'
      org: 'AnsibleGuy'
      ou:
      country:
      state:
      locality:
      email:
      pwd:  # it's highly recommended setting a passphrase!

  headers:
    # if first key does not include 'header' => prepend 'add_header'
    'Strict-Transport-Security': '"max-age=31536000; includeSubDomains" always'
    'Referrer-Policy': 'same-origin'
    # 'Content-Security-Policy': "\"default-src 'self'\""  # disabled since it blocks too many common use-cases
    'X-Frame-Options': 'DENY'
    'X-Content-Type-Options': 'nosniff'
    'X-Permitted-Cross-Domain-Policies': 'none'
    'X-XSS-Protection': '"1; mode=block"'
    'Set-Cookie': '"Path=/;HttpOnly;Secure;SameSite=none"'
    # 'Permissions-Policy': ''

NGINX_CONFIG: "{{ default_nginx | combine(nginx, recursive=true) }}"

default_site_config:
  state: 'present'
  mode: 'proxy'
  port_plain: 80
  port_ssl: 443
  aliases: []
  ip:
  user: 'nobody'
  group: 'nobody'
  http_version: 2
  plain_site: true  # if http site (only used for redirect to https) should be created

  config: {}  # site-specific setting-value pairs
  config_additions: []  # lines that will 1-to-1 be appended to the site-config (directory config etc.)
  # BE AWARE that you might break the config-syntax if you're not careful

  security:
    restrict_methods: true  # disable anything but GET/POST/HEAD methods; if you're running a web-application you might need to disable this filter

  redirect:
    target: 'https://github.com/ansibleguy'
    request_uri: true

  proxy:
    ip: '127.0.0.1'
    dns:  # proxy target ip will be ignored if dns is provided
    port: 8080
    proto: 'http'
    headers:
      Host: '$http_host'
      X-Forwarded-Host: '$host'
      X-Forwarded-Server: '$host'
      X-Forwarded-For: '$proxy_add_x_forwarded_for'
      X-Forwarded-Proto: '$scheme'
      X-Real-IP: '$remote_addr'
    cache:  # see: https://www.nginx.com/blog/nginx-caching-guide/
      enable: false
      path: '/var/cache/nginx'
      max_size: '512m'
      memory: '10m'
      inactive: '1d'
      levels: '1:2'
      use_temp_path: 'off'
      settings:
        revalidate: 'on'
        # min_uses: '3'
        use_stale: 'error timeout updating http_500 http_502 http_503 http_504'
        background_update: 'on'
        lock: 'on'

  serve:
    path: '/var/www/html'
    index: ['index.html']

  ssl:
    mode: 'selfsigned'  # existing/selfsigned/ca/letsencrypt
    # existing:
    #   We expect the certs to be placed in the role's 'files' directory named like the site
    #   Example: files/certs/ansibleguy.key and files/certs/ansibleguy.crt
    # letsencrypt:
    #   Host needs to have a valid public dns record pointed at it
    #   Needs to be publicly reachable over port 80/tcp
    cert:
      name:
      cn: 'Nginx Certificate'
      org: 'AnsibleGuy'
      ou:
      country:
      state:
      locality:
      email:
      crl_distribution: []
    ca:
      file:  # can be used if you want to use an existing ca
      cn:
      org:
      ou:
      country:
      state:
      locality:
      email:
      pwd:  # it's highly recommended setting a passphrase!

  letsencrypt:
    key_size:
    email:

  headers: {}

# packages
nginx_config_graylist: ['ssl_stapling', 'ssl_stapling_verify']
nginx_restricted_methods: ['GET', 'POST', 'HEAD']
NONE_VALUES: [none, '', ' ']
